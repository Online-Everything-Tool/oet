name: Deploy Static Frontend to S3 (Ignoring API)

on:
  push:
    branches: [main]

jobs:
  build-and-deploy-static:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install Dependencies
        run: npm ci

      # --- Modification Starts ---
      - name: Remove API Directory Before Static Build
        run: |
          if [ -d "app/api" ]; then
            echo "Removing app/api directory..."
            rm -rf app/api
            echo "app/api directory removed."
          else
            echo "app/api directory not found, skipping removal."
          fi

      - name: Build Static Export
        env:
          BUILDING_STATIC: 'true' # Env var for next.config.js/.ts/.mjs to set output: 'export'
        run: |
          echo "Building static export (output: 'export')..."
          npm run build
        # Optional: Add error handling here if build fails for other reasons
        # run: npm run build || { echo "Build failed!"; exit 1; }

      # No need to restore the directory as it was deleted in this ephemeral environment
      # --- Modification Ends ---

      # Check if build output exists before deploying
      - name: Check for output directory
        id: check_out_dir
        run: |
          if [ -d "./out" ]; then
            echo "Output directory ./out found."
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "Output directory ./out NOT found. Build might have failed or output is not 'export'."
            echo "exists=false" >> $GITHUB_OUTPUT
            # Decide if you want to fail the workflow if ./out is missing
            # exit 1
          fi

      # --- Deployment steps only run if ./out exists ---
      - name: Configure AWS Credentials
        if: steps.check_out_dir.outputs.exists == 'true'
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1 # Make sure this is your bucket's region

      - name: Copy files to S3 with the AWS CLI
        if: steps.check_out_dir.outputs.exists == 'true'
        run: |
          echo "Syncing ./out to S3 bucket s3://online-everything-tool.com..."
          aws s3 sync ./out s3://online-everything-tool.com --delete

      - name: Invalidate CloudFront Cache
        if: steps.check_out_dir.outputs.exists == 'true'
        run: |
          echo "Invalidating CloudFront cache for distribution ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}..."
          aws cloudfront create-invalidation \
            --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} \
            --paths "/*"
